#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <Wire.h> //Needed for I2C to GNSS
#include <SparkFun_u-blox_GNSS_Arduino_Library.h> //http://librarymanager/All#SparkFun_u-blox_GNSS
#include <SerialPIO.h>
#include "SdFat.h"
#include <Adafruit_BMP3XX.h>

#define SEALEVELPRESSURE_HPA (1013.25)
#define PIN_CS 17
#define SD_SPI_SPEED 50

SdFat sd;
SdFile file;
SFE_UBLOX_GNSS myGNSS;
Adafruit_BNO055 bno = Adafruit_BNO055(55, 0x28, &Wire); // I2C1 (GPIO 12 and GPIO 13)
Adafruit_BMP3XX bmp; //BMP390 used

String packet;

void setup() {
  Serial.begin(9600);
  Serial1.setTX(0);
  Serial1.setRX(1);
  Serial1.begin(9600);

  Wire.setSDA(4); // SDA on GPIO 4
  Wire.setSCL(5); // SCL on GPIO 5
  Wire.begin();

  if (myGNSS.begin() == false) //Connect to the u-blox module using Wire port
  {
    Serial.println("u-blox GNSS not detected at default I2C address. Please check wiring. Freezing.");
    while (1);
  }

  if (!bno.begin()) {
    Serial.println("BNO055 not detected. Check wiring.");
  }

  bmp.setTemperatureOversampling(BMP3_OVERSAMPLING_8X);
  bmp.setPressureOversampling(BMP3_OVERSAMPLING_4X);
  bmp.setIIRFilterCoeff(BMP3_IIR_FILTER_COEFF_3);

  if (!sd.begin(PIN_CS, SD_SCK_MHZ(SD_SPI_SPEED)))
  {
    Serial.println("SD fail to initialize.");
    Serial.println("Try increasing?");
    while (1) {}
  }

  if (!file.open("Example1.TXT", O_WRITE | O_CREAT))
  {
    Serial.println("Write failed");
    while (1) {}
  }
}

void loop() {

  sensors_event_t event;
  bno.getEvent(&event);

  packet = "1,";
  packet += String(event.orientation.x) + ",";
  packet += String(event.orientation.y) + ",";
  packet += String(event.orientation.z) + ",";
  long latitude = myGNSS.getLatitude();
  long longitude = myGNSS.getLongitude();
  packet += String(latitude) + ",";
  packet += String(longitude) + ",";
  packet += String(bmp.temperature) + ",";
  packet += String(bmp.pressure / 100.0) + ",";
  packet += String(bmp.readAltitude(SEALEVELPRESSURE_HPA)) + ",";

  Serial.println(packet);
  Serial1.println(packet);
  file.print(packet);
  delay(1000);
  // while(Serial1.available()){
  //   Serial.print(Serial1.read());
}
